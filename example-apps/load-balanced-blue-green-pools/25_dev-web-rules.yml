# Copyright (c) 2016, Kris Feldmann
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 
#   1. Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
# 
#   2. Redistributions in binary form must reproduce the above
#      copyright notice, this list of conditions and the following
#      disclaimer in the documentation and/or other materials provided
#      with the distribution.
# 
#   3. Neither the name of the copyright holder nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER
# OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


target-groups:
  build:
  - build-~{var.environment}-~{var.tier}
  build-~{var.environment}:
  - build-~{var.environment}-~{var.tier}

steps.build-~{var.environment}-~{var.tier}:

### ELB Ingress ========================================================
#   web from developer's location
- aws.ec2.authorize-security-group-ingress.~{var.environment}-~{var.tier}-elb-00:
  - --group-id
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-elb.GroupId}
  - --protocol
  - tcp
  - --port
  - 80-80
  - --cidr
  - ~{var.developer-cidr}

### ELB Egress =========================================================
#   web to this tier's instances
- aws.ec2.authorize-security-group-egress.~{var.environment}-~{var.tier}-elb-00:
  - --group-id
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-elb.GroupId}
  - --protocol
  - tcp
  - --port
  - 80-80
  - --source-group
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-app.GroupId}

### Instance Ingress ===================================================
#   network time protocol
- aws.ec2.authorize-security-group-ingress.~{var.environment}-~{var.tier}-app-00:
  - --group-id
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-app.GroupId}
  - --protocol
  - udp
  - --port
  - 123-123
  - --cidr
  - 0.0.0.0/0

#   ssh from the developer's location
- aws.ec2.authorize-security-group-ingress.~{var.environment}-~{var.tier}-app-10:
  - --group-id
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-app.GroupId}
  - --protocol
  - tcp
  - --port
  - 22-22
  - --cidr
  - ~{var.developer-cidr}

#   web from this tier's elb
- aws.ec2.authorize-security-group-ingress.~{var.environment}-~{var.tier}-app-20:
  - --group-id
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-app.GroupId}
  - --protocol
  - tcp
  - --port
  - 80-80
  - --source-group
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-elb.GroupId}

### Instance Egress ====================================================
#   network time protocol
- aws.ec2.authorize-security-group-egress.~{var.environment}-~{var.tier}-app-00:
  - --group-id
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-app.GroupId}
  - --protocol
  - udp
  - --port
  - 123-123
  - --cidr
  - 0.0.0.0/0

#   yum(http) to s3
- aws.ec2.authorize-security-group-egress.~{var.environment}-~{var.tier}-s3-00:
  - --group-id
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-s3.GroupId}
  - --ip-permissions
  - |
    [
      {
        "IpProtocol": "tcp",
        "FromPort": 80,
        "ToPort": 80,
        "PrefixListIds": [
          {
            "PrefixListId": "~{aws.ec2.describe-prefix-lists.~{var.REGION}-s3.PrefixLists.0.PrefixListId}"
          }
        ]
      }
    ]

