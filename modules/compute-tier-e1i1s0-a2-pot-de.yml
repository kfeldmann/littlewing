# A compute tier with:
# - One ELB with one non-secure listener
# - Two auto scaling groups with blue/green pool switching
# - Encryption of AMI root volume
#     (using account's default CMK for EBS)
# - Seven security groups (with default rules removed):
#   - app (for the instances)
#   - s3 (for the instances, for the prefix-list rule)
#   - elb (for the ELB)
#   - acl1 (for the ELB; room for additional rules
#       due to 50 rule per group limit)
#   - acl2 (for the ELB; room for additional rules
#       due to 50 rule per group limit)
#   - acl3 (for the ELB; room for additional rules
#       due to 50 rule per group limit)
#   - acl4 (for the ELB; room for additional rules
#       due to 50 rule per group limit)
# - One S3 service endpoint
# - Two availability zones
# - Public-only, per-tier subnet model
# - Dynamic egress IPs (no NAT gateways)

# Prerequisites
# - VPC (either app-level or env-level)

# Required vars
# - appname
# - environment
# - tier
#
# - vpc-name (either ~{var.appname} or ~{var.environment})
# - REGION
# - az-letter-0
# - az-letter-1
# - subnets.~{var.environment}-~{var.tier}-~{var.az-letter-0}
# - subnets.~{var.environment}-~{var.tier}-~{var.az-letter-1}
#
# - elb-0-scheme
# - elb-0-idle-timeout
# - elb-0-connection-draining-timeout
# - elb-0-healthcheck-url
# - elb-0-healthcheck-interval
# - elb-0-healthcheck-timeout
# - elb-0-healthcheck-unhealthy-threshold
# - elb-0-healthcheck-healthy-threshold
# - elb-0-listener-0-port
# - elb-0-listener-0-protocol
# - elb-0-instance-0-port
# - elb-0-instance-0-protocol
#
# - ssh-key-name
#
# - blue-version
# - blue-image-owner # source image before encryption
# - blue-image-name  # source image before encryption
# - blue-root-volume-size
# - blue-user-data
# - blue-instance-role-policy
# - blue-instance-type
# - blue-scale-min
# - blue-scale-desired
# - blue-scale-max
# - blue-grace-period
# - blue-cooldown
#
# - green-version
# - green-image-owner # source image before encryption
# - green-image-name  # source image before encryption
# - green-root-volume-size
# - green-user-data
# - green-instance-role-policy
# - green-instance-type
# - green-scale-min
# - green-scale-desired
# - green-scale-max
# - green-grace-period
# - green-cooldown

# Targets
# - [build]: build-~{var.environment}-~{var.tier}
# - [build-~{var.environment}]: build-~{var.environment}-~{var.tier}
# - build-~{var.environment}-~{var.tier}

# Copyright (c) 2016, Kris Feldmann
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 
#   1. Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
# 
#   2. Redistributions in binary form must reproduce the above
#      copyright notice, this list of conditions and the following
#      disclaimer in the documentation and/or other materials provided
#      with the distribution.
# 
#   3. Neither the name of the copyright holder nor the names of its
#      contributors may be used to endorse or promote products derived
#      from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER
# OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


target-groups:
  build:
  - build-~{var.environment}-~{var.tier}
  build-~{var.environment}:
  - build-~{var.environment}-~{var.tier}

steps.build-~{var.environment}-~{var.tier}:

- aws.ec2.create-subnet.~{var.environment}-~{var.tier}-~{var.az-letter-0}:
  - --vpc-id
  - ~{aws.ec2.create-vpc.~{var.vpc-name}.Vpc.VpcId}
  - --cidr-block
  - ~{var.subnets.~{var.environment}-~{var.tier}-~{var.az-letter-0}}
  - --availability-zone
  - ~{var.REGION}~{var.az-letter-0}

- aws.ec2.create-subnet.~{var.environment}-~{var.tier}-~{var.az-letter-1}:
  - --vpc-id
  - ~{aws.ec2.create-vpc.~{var.vpc-name}.Vpc.VpcId}
  - --cidr-block
  - ~{var.subnets.~{var.environment}-~{var.tier}-~{var.az-letter-1}}
  - --availability-zone
  - ~{var.REGION}~{var.az-letter-1}

- aws.ec2.create-tags.subnets-~{var.environment}-~{var.tier}:
  - --resources
  - ~{aws.ec2.create-subnet.~{var.environment}-~{var.tier}-~{var.az-letter-0}.Subnet.SubnetId}
  - ~{aws.ec2.create-subnet.~{var.environment}-~{var.tier}-~{var.az-letter-1}.Subnet.SubnetId}
  - --tags
  - "Key=Name,Value=~{var.appname}-~{var.environment}-~{var.tier} (~{var.USER})"
  - Key=AppName,Value=~{var.appname}
  - Key=Environment,Value=~{var.environment}
  - Key=Tier,Value=~{var.tier}
  - Key=Contact,Value=~{var.USER}

- aws.ec2.modify-subnet-attribute.~{var.environment}-~{var.tier}-~{var.az-letter-0}:
  - --subnet-id
  - ~{aws.ec2.create-subnet.~{var.environment}-~{var.tier}-~{var.az-letter-0}.Subnet.SubnetId}
  - --map-public-ip-on-launch

- aws.ec2.modify-subnet-attribute.~{var.environment}-~{var.tier}-~{var.az-letter-1}:
  - --subnet-id
  - ~{aws.ec2.create-subnet.~{var.environment}-~{var.tier}-~{var.az-letter-1}.Subnet.SubnetId}
  - --map-public-ip-on-launch

- aws.ec2.create-route-table.~{var.environment}-~{var.tier}:
  - --vpc-id
  - ~{aws.ec2.create-vpc.~{var.vpc-name}.Vpc.VpcId}

- aws.ec2.create-tags.route-table-~{var.environment}-~{var.tier}:
  - --resources
  - ~{aws.ec2.create-route-table.~{var.environment}-~{var.tier}.RouteTable.RouteTableId}
  - --tags
  - "Key=Name,Value=~{var.appname}-~{var.environment}-~{var.tier} (~{var.USER})"
  - Key=AppName,Value=~{var.appname}
  - Key=Environment,Value=~{var.environment}
  - Key=Tier,Value=~{var.tier}
  - Key=Contact,Value=~{var.USER}

- aws.ec2.associate-route-table.~{var.environment}-~{var.tier}-~{var.az-letter-0}:
  - --subnet-id
  - ~{aws.ec2.create-subnet.~{var.environment}-~{var.tier}-~{var.az-letter-0}.Subnet.SubnetId}
  - --route-table-id
  - ~{aws.ec2.create-route-table.~{var.environment}-~{var.tier}.RouteTable.RouteTableId}

- aws.ec2.associate-route-table.~{var.environment}-~{var.tier}-~{var.az-letter-1}:
  - --subnet-id
  - ~{aws.ec2.create-subnet.~{var.environment}-~{var.tier}-~{var.az-letter-1}.Subnet.SubnetId}
  - --route-table-id
  - ~{aws.ec2.create-route-table.~{var.environment}-~{var.tier}.RouteTable.RouteTableId}

- aws.ec2.create-route.internet-gateway-~{var.environment}-~{var.tier}:
  - --route-table-id
  - ~{aws.ec2.create-route-table.~{var.environment}-~{var.tier}.RouteTable.RouteTableId}
  - --destination-cidr-block
  - 0.0.0.0/0
  - --gateway-id
  - ~{aws.ec2.create-internet-gateway.~{var.vpc-name}.InternetGateway.InternetGatewayId}

- aws.ec2.create-vpc-endpoint.~{var.environment}-~{var.tier}:
  - --vpc-id
  - ~{aws.ec2.create-vpc.~{var.vpc-name}.Vpc.VpcId}
  - --service-name
  - com.amazonaws.~{var.REGION}.s3
  - --route-table-ids
  - ~{aws.ec2.create-route-table.~{var.environment}-~{var.tier}.RouteTable.RouteTableId}

- aws.ec2.create-flow-logs.~{var.environment}-~{var.tier}:
  - --resource-ids
  - ~{aws.ec2.create-subnet.~{var.environment}-~{var.tier}-~{var.az-letter-0}.Subnet.SubnetId}
  - ~{aws.ec2.create-subnet.~{var.environment}-~{var.tier}-~{var.az-letter-1}.Subnet.SubnetId}
  - --resource-type
  - Subnet
  - --traffic-type
  - ALL
  - --log-group-name
  - ~{var.appname}-~{var.environment}-~{var.tier}
  - --deliver-logs-permission-arn
  - ~{aws.iam.create-role.~{var.appname}-vpc-flow-log-role.Role.Arn}

- aws.ec2.create-security-group.~{var.environment}-~{var.tier}-app:
  - --group-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-app
  - --description
  - App security group for the ~{var.appname}-~{var.environment}-~{var.tier} tier.
  - --vpc-id
  - ~{aws.ec2.create-vpc.~{var.vpc-name}.Vpc.VpcId}

- aws.ec2.create-security-group.~{var.environment}-~{var.tier}-s3:
  - --group-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-s3
  - --description
  - S3 security group for the ~{var.appname}-~{var.environment}-~{var.tier} tier.
  - --vpc-id
  - ~{aws.ec2.create-vpc.~{var.vpc-name}.Vpc.VpcId}

- aws.ec2.create-security-group.~{var.environment}-~{var.tier}-elb:
  - --group-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-elb
  - --description
  - ELB security group for the ~{var.appname}-~{var.environment}-~{var.tier} tier.
  - --vpc-id
  - ~{aws.ec2.create-vpc.~{var.vpc-name}.Vpc.VpcId}

- aws.ec2.create-security-group.~{var.environment}-~{var.tier}-acl1:
  - --group-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-acl1
  - --description
  - ACL-1 security group for the ~{var.appname}-~{var.environment}-~{var.tier} tier.
  - --vpc-id
  - ~{aws.ec2.create-vpc.~{var.vpc-name}.Vpc.VpcId}

- aws.ec2.create-security-group.~{var.environment}-~{var.tier}-acl2:
  - --group-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-acl2
  - --description
  - ACL-2 security group for the ~{var.appname}-~{var.environment}-~{var.tier} tier.
  - --vpc-id
  - ~{aws.ec2.create-vpc.~{var.vpc-name}.Vpc.VpcId}

- aws.ec2.create-security-group.~{var.environment}-~{var.tier}-acl3:
  - --group-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-acl3
  - --description
  - ACL-3 security group for the ~{var.appname}-~{var.environment}-~{var.tier} tier.
  - --vpc-id
  - ~{aws.ec2.create-vpc.~{var.vpc-name}.Vpc.VpcId}

- aws.ec2.create-security-group.~{var.environment}-~{var.tier}-acl4:
  - --group-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-acl4
  - --description
  - ACL-4 security group for the ~{var.appname}-~{var.environment}-~{var.tier} tier.
  - --vpc-id
  - ~{aws.ec2.create-vpc.~{var.vpc-name}.Vpc.VpcId}

- aws.ec2.create-tags.security-group-~{var.environment}-~{var.tier}-app:
  - --resources
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-app.GroupId}
  - --tags
  - "Key=Name,Value=app ~{var.appname}-~{var.environment}-~{var.tier} (~{var.USER})"
  - Key=AppName,Value=~{var.appname}
  - Key=Environment,Value=~{var.environment}
  - Key=Tier,Value=~{var.tier}
  - Key=Purpose,Value=app
  - Key=Contact,Value=~{var.USER}

- aws.ec2.create-tags.security-group-~{var.environment}-~{var.tier}-s3:
  - --resources
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-s3.GroupId}
  - --tags
  - "Key=Name,Value=s3 ~{var.appname}-~{var.environment}-~{var.tier} (~{var.USER})"
  - Key=AppName,Value=~{var.appname}
  - Key=Environment,Value=~{var.environment}
  - Key=Tier,Value=~{var.tier}
  - Key=Purpose,Value=s3
  - Key=Contact,Value=~{var.USER}

- aws.ec2.create-tags.security-group-~{var.environment}-~{var.tier}-elb:
  - --resources
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-elb.GroupId}
  - --tags
  - "Key=Name,Value=elb ~{var.appname}-~{var.environment}-~{var.tier} (~{var.USER})"
  - Key=AppName,Value=~{var.appname}
  - Key=Environment,Value=~{var.environment}
  - Key=Tier,Value=~{var.tier}
  - Key=Purpose,Value=elb
  - Key=Contact,Value=~{var.USER}

- aws.ec2.create-tags.security-group-~{var.environment}-~{var.tier}-acl1:
  - --resources
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-acl1.GroupId}
  - --tags
  - "Key=Name,Value=acl1 ~{var.appname}-~{var.environment}-~{var.tier} (~{var.USER})"
  - Key=AppName,Value=~{var.appname}
  - Key=Environment,Value=~{var.environment}
  - Key=Tier,Value=~{var.tier}
  - Key=Purpose,Value=acl1
  - Key=Contact,Value=~{var.USER}

- aws.ec2.create-tags.security-group-~{var.environment}-~{var.tier}-acl2:
  - --resources
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-acl2.GroupId}
  - --tags
  - "Key=Name,Value=acl2 ~{var.appname}-~{var.environment}-~{var.tier} (~{var.USER})"
  - Key=AppName,Value=~{var.appname}
  - Key=Environment,Value=~{var.environment}
  - Key=Tier,Value=~{var.tier}
  - Key=Purpose,Value=acl2
  - Key=Contact,Value=~{var.USER}

- aws.ec2.create-tags.security-group-~{var.environment}-~{var.tier}-acl3:
  - --resources
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-acl3.GroupId}
  - --tags
  - "Key=Name,Value=acl3 ~{var.appname}-~{var.environment}-~{var.tier} (~{var.USER})"
  - Key=AppName,Value=~{var.appname}
  - Key=Environment,Value=~{var.environment}
  - Key=Tier,Value=~{var.tier}
  - Key=Purpose,Value=acl3
  - Key=Contact,Value=~{var.USER}

- aws.ec2.create-tags.security-group-~{var.environment}-~{var.tier}-acl4:
  - --resources
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-acl4.GroupId}
  - --tags
  - "Key=Name,Value=acl4 ~{var.appname}-~{var.environment}-~{var.tier} (~{var.USER})"
  - Key=AppName,Value=~{var.appname}
  - Key=Environment,Value=~{var.environment}
  - Key=Tier,Value=~{var.tier}
  - Key=Purpose,Value=acl4
  - Key=Contact,Value=~{var.USER}

- aws.ec2.revoke-security-group-egress.~{var.environment}-~{var.tier}-app:
  - --group-id
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-app.GroupId}
  - --protocol
  - '-1'
  - --cidr
  - 0.0.0.0/0

- aws.ec2.revoke-security-group-egress.~{var.environment}-~{var.tier}-s3:
  - --group-id
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-s3.GroupId}
  - --protocol
  - '-1'
  - --cidr
  - 0.0.0.0/0

- aws.ec2.revoke-security-group-egress.~{var.environment}-~{var.tier}-elb:
  - --group-id
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-elb.GroupId}
  - --protocol
  - '-1'
  - --cidr
  - 0.0.0.0/0

- aws.ec2.revoke-security-group-egress.~{var.environment}-~{var.tier}-acl1:
  - --group-id
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-acl1.GroupId}
  - --protocol
  - '-1'
  - --cidr
  - 0.0.0.0/0

- aws.ec2.revoke-security-group-egress.~{var.environment}-~{var.tier}-acl2:
  - --group-id
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-acl2.GroupId}
  - --protocol
  - '-1'
  - --cidr
  - 0.0.0.0/0

- aws.ec2.revoke-security-group-egress.~{var.environment}-~{var.tier}-acl3:
  - --group-id
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-acl3.GroupId}
  - --protocol
  - '-1'
  - --cidr
  - 0.0.0.0/0

- aws.ec2.revoke-security-group-egress.~{var.environment}-~{var.tier}-acl4:
  - --group-id
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-acl4.GroupId}
  - --protocol
  - '-1'
  - --cidr
  - 0.0.0.0/0

- aws.elb.create-load-balancer.~{var.environment}-~{var.tier}-0:
  - --load-balancer-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-0
  - --listeners
  - Protocol=~{var.elb-0-listener-0-protocol},LoadBalancerPort=~{var.elb-0-listener-0-port},InstanceProtocol=~{var.elb-0-instance-0-protocol},InstancePort=~{var.elb-0-instance-0-port}
  - --subnets
  - ~{aws.ec2.create-subnet.~{var.environment}-~{var.tier}-~{var.az-letter-0}.Subnet.SubnetId}
  - ~{aws.ec2.create-subnet.~{var.environment}-~{var.tier}-~{var.az-letter-1}.Subnet.SubnetId}
  - --security-groups
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-elb.GroupId}
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-acl1.GroupId}
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-acl2.GroupId}
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-acl3.GroupId}
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-acl4.GroupId}
  - --scheme
  - ~{var.elb-0-scheme}
  - --tags
  - "Key=Name,Value=~{var.appname}-~{var.environment}-~{var.tier}-~{var.elb-0-scheme} ~{var.USER}"
  - Key=AppName,Value=~{var.appname}
  - Key=Environment,Value=~{var.environment}
  - Key=Tier,Value=~{var.tier}
  - Key=Contact,Value=~{var.USER}

- aws.elb.modify-load-balancer-attributes.~{var.environment}-~{var.tier}-0:
  - --load-balancer-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-0
  - --load-balancer-attributes
  - "CrossZoneLoadBalancing={Enabled=true},ConnectionDraining={Enabled=True,Timeout=~{var.elb-0-connection-draining-timeout}},ConnectionSettings={IdleTimeout=~{var.elb-0-idle-timeout}}"

- aws.elb.configure-health-check.~{var.appname}-~{var.environment}-~{var.tier}-0:
  - --load-balancer-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-0
  - --health-check
  - "Target=~{var.elb-0-healthcheck-url},Interval=~{var.elb-0-healthcheck-interval},UnhealthyThreshold=~{var.elb-0-healthcheck-unhealthy-threshold},HealthyThreshold=~{var.elb-0-healthcheck-healthy-threshold},Timeout=~{var.elb-0-healthcheck-timeout}"

- aws.ec2.describe-images.~{var.environment}-~{var.tier}-~{var.blue-version}:
  - --owners
  - ~{var.blue-image-owner}
  - --filters
  - "Name=name,Values='~{var.blue-image-name}'"

# Copy/encrypt once per region + ami-id
- aws.ec2.copy-image.~{var.REGION}-~{aws.ec2.describe-images.~{var.environment}-~{var.tier}-~{var.blue-version}.Images.0.ImageId}:
  - --source-region
  - ~{var.REGION}
  - --source-image-id
  - ~{aws.ec2.describe-images.~{var.environment}-~{var.tier}-~{var.blue-version}.Images.0.ImageId}
  - --name
  - ~{var.blue-image-name}
  - --encrypted

- aws.ec2.describe-images.~{var.environment}-~{var.tier}-~{var.green-version}:
  - --owners
  - ~{var.green-image-owner}
  - --filters
  - "Name=name,Values='~{var.green-image-name}'"

# Copy/encrypt once per region + ami-id
- aws.ec2.copy-image.~{var.REGION}-~{aws.ec2.describe-images.~{var.environment}-~{var.tier}-~{var.green-version}.Images.0.ImageId}:
  - --source-region
  - ~{var.REGION}
  - --source-image-id
  - ~{aws.ec2.describe-images.~{var.environment}-~{var.tier}-~{var.green-version}.Images.0.ImageId}
  - --name
  - ~{var.green-image-name}
  - --encrypted

- aws.iam.create-role.~{var.environment}-~{var.tier}-blue:
  - --role-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-blue
  - --assume-role-policy-document
  - |
    {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Effect": "Allow",
          "Principal": {
            "Service": "ec2.amazonaws.com"
          },
          "Action": "sts:AssumeRole"
        }
      ]
    }

- aws.iam.create-role.~{var.environment}-~{var.tier}-green:
  - --role-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-green
  - --assume-role-policy-document
  - |
    {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Effect": "Allow",
          "Principal": {
            "Service": "ec2.amazonaws.com"
          },
          "Action": "sts:AssumeRole"
        }
      ]
    }

- aws.iam.put-role-policy.~{var.environment}-~{var.tier}-blue-~{var.blue-version}:
  - --role-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-blue
  - --policy-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-blue
  - --policy-document
  - ~{var.blue-instance-role-policy}

- aws.iam.put-role-policy.~{var.environment}-~{var.tier}-green-~{var.green-version}:
  - --role-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-green
  - --policy-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-green
  - --policy-document
  - ~{var.green-instance-role-policy}

- aws.iam.create-instance-profile.~{var.environment}-blue-~{var.tier}:
  - --instance-profile-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-blue

- aws.iam.create-instance-profile.~{var.environment}-green-~{var.tier}:
  - --instance-profile-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-green

- aws.iam.add-role-to-instance-profile.~{var.environment}-blue-~{var.tier}:
  - --instance-profile-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-blue
  - --role-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-blue

- aws.iam.add-role-to-instance-profile.~{var.environment}-green-~{var.tier}:
  - --instance-profile-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-green
  - --role-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-green

- exec.sleep.10-wait-for-role-~{var.environment}-~{var.tier}:
  - 10

# Create asg using stub lc, then switch to the versioned lc
- aws.autoscaling.create-launch-configuration.~{var.environment}-~{var.tier}-stub:
  - --launch-configuration-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-stub
  - --image-id
  - ~{aws.ec2.describe-images.~{var.environment}-~{var.tier}-~{var.blue-version}.Images.0.ImageId}
  - --key-name
  - ~{var.ssh-key-name}
  - --security-groups
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-app.GroupId}
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-s3.GroupId}
  - --user-data
  - ~{var.blue-user-data}
  - --instance-type
  - ~{var.blue-instance-type}
  - --block-device-mappings
  - '[{"DeviceName":"/dev/xvda","Ebs":{"VolumeSize":~{var.blue-root-volume-size}}}]'
  - --iam-instance-profile
  - ~{var.appname}-~{var.environment}-~{var.tier}-blue

- aws.autoscaling.create-launch-configuration.~{var.environment}-~{var.tier}-blue-~{var.blue-version}:
  - --launch-configuration-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-blue-~{var.blue-version}
  - --image-id
  - ~{aws.ec2.copy-image.~{var.REGION}-~{aws.ec2.describe-images.~{var.environment}-~{var.tier}-~{var.blue-version}.Images.0.ImageId}.ImageId}
  - --key-name
  - ~{var.ssh-key-name}
  - --security-groups
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-app.GroupId}
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-s3.GroupId}
  - --user-data
  - ~{var.blue-user-data}
  - --instance-type
  - ~{var.blue-instance-type}
  - --block-device-mappings
  - '[{"DeviceName":"/dev/xvda","Ebs":{"VolumeSize":~{var.blue-root-volume-size}}}]'
  - --iam-instance-profile
  - ~{var.appname}-~{var.environment}-~{var.tier}-blue

- aws.autoscaling.create-launch-configuration.~{var.environment}-~{var.tier}-green-~{var.green-version}:
  - --launch-configuration-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-green-~{var.green-version}
  - --image-id
  - ~{aws.ec2.copy-image.~{var.REGION}-~{aws.ec2.describe-images.~{var.environment}-~{var.tier}-~{var.green-version}.Images.0.ImageId}.ImageId}
  - --key-name
  - ~{var.ssh-key-name}
  - --security-groups
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-app.GroupId}
  - ~{aws.ec2.create-security-group.~{var.environment}-~{var.tier}-s3.GroupId}
  - --user-data
  - ~{var.green-user-data}
  - --instance-type
  - ~{var.green-instance-type}
  - --block-device-mappings
  - '[{"DeviceName":"/dev/xvda","Ebs":{"VolumeSize":~{var.green-root-volume-size}}}]'
  - --iam-instance-profile
  - ~{var.appname}-~{var.environment}-~{var.tier}-green

- aws.autoscaling.create-auto-scaling-group.~{var.environment}-~{var.tier}-blue:
  - --auto-scaling-group-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-blue
  - --launch-configuration-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-stub
  - --min-size
  - ~{var.blue-scale-min}
  - --desired-capacity
  - ~{var.blue-scale-desired}
  - --max-size
  - ~{var.blue-scale-max}
  - --availability-zones
  - ~{var.REGION}~{var.az-letter-0}
  - ~{var.REGION}~{var.az-letter-1}
  - --vpc-zone-identifier
  - ~{aws.ec2.create-subnet.~{var.environment}-~{var.tier}-~{var.az-letter-0}.Subnet.SubnetId},~{aws.ec2.create-subnet.~{var.environment}-~{var.tier}-~{var.az-letter-1}.Subnet.SubnetId}
  - --health-check-type
  - ELB
  - --health-check-grace-period
  - ~{var.blue-grace-period}
  - --default-cooldown
  - ~{var.blue-cooldown}
  - --load-balancer-names
  - ~{var.appname}-~{var.environment}-~{var.tier}-0
  - --tags
  - "ResourceId=~{var.appname}-~{var.environment}-~{var.tier}-blue,ResourceType=auto-scaling-group,Key=AppName,Value=~{var.appname},PropagateAtLaunch=true"
  - "ResourceId=~{var.appname}-~{var.environment}-~{var.tier}-blue,ResourceType=auto-scaling-group,Key=Environment,Value=~{var.environment},PropagateAtLaunch=true"
  - "ResourceId=~{var.appname}-~{var.environment}-~{var.tier}-blue,ResourceType=auto-scaling-group,Key=Tier,Value=~{var.tier},PropagateAtLaunch=true"
  - "ResourceId=~{var.appname}-~{var.environment}-~{var.tier}-blue,ResourceType=auto-scaling-group,Key=Pool,Value=blue,PropagateAtLaunch=true"
  - "ResourceId=~{var.appname}-~{var.environment}-~{var.tier}-blue,ResourceType=auto-scaling-group,Key=Name,Value=~{var.appname}-~{var.environment}-~{var.tier}-blue,PropagateAtLaunch=true"
  - "ResourceId=~{var.appname}-~{var.environment}-~{var.tier}-blue,ResourceType=auto-scaling-group,Key=Contact,Value=~{var.USER},PropagateAtLaunch=true"

- aws.autoscaling.create-auto-scaling-group.~{var.environment}-~{var.tier}-green:
  - --auto-scaling-group-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-green
  - --launch-configuration-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-stub
  - --min-size
  - ~{var.green-scale-min}
  - --desired-capacity
  - ~{var.green-scale-desired}
  - --max-size
  - ~{var.green-scale-max}
  - --availability-zones
  - ~{var.REGION}~{var.az-letter-0}
  - ~{var.REGION}~{var.az-letter-1}
  - --vpc-zone-identifier
  - ~{aws.ec2.create-subnet.~{var.environment}-~{var.tier}-~{var.az-letter-0}.Subnet.SubnetId},~{aws.ec2.create-subnet.~{var.environment}-~{var.tier}-~{var.az-letter-1}.Subnet.SubnetId}
  - --health-check-type
  - ELB
  - --health-check-grace-period
  - ~{var.green-grace-period}
  - --default-cooldown
  - ~{var.green-cooldown}
  - --load-balancer-names
  - ~{var.appname}-~{var.environment}-~{var.tier}-0
  - --tags
  - "ResourceId=~{var.appname}-~{var.environment}-~{var.tier}-green,ResourceType=auto-scaling-group,Key=AppName,Value=~{var.appname},PropagateAtLaunch=true"
  - "ResourceId=~{var.appname}-~{var.environment}-~{var.tier}-green,ResourceType=auto-scaling-group,Key=Environment,Value=~{var.environment},PropagateAtLaunch=true"
  - "ResourceId=~{var.appname}-~{var.environment}-~{var.tier}-green,ResourceType=auto-scaling-group,Key=Tier,Value=~{var.tier},PropagateAtLaunch=true"
  - "ResourceId=~{var.appname}-~{var.environment}-~{var.tier}-green,ResourceType=auto-scaling-group,Key=Pool,Value=green,PropagateAtLaunch=true"
  - "ResourceId=~{var.appname}-~{var.environment}-~{var.tier}-green,ResourceType=auto-scaling-group,Key=Name,Value=~{var.appname}-~{var.environment}-~{var.tier}-green,PropagateAtLaunch=true"
  - "ResourceId=~{var.appname}-~{var.environment}-~{var.tier}-green,ResourceType=auto-scaling-group,Key=Contact,Value=~{var.USER},PropagateAtLaunch=true"

- aws.autoscaling.update-auto-scaling-group.~{var.environment}-~{var.tier}-blue-~{var.blue-version}:
  - --auto-scaling-group-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-blue
  - --launch-configuration-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-blue-~{var.blue-version}
  - --min-size
  - ~{var.blue-scale-min}
  - --max-size
  - ~{var.blue-scale-max}
  - --desired-capacity
  - ~{var.blue-scale-desired}
  - --default-cooldown
  - ~{var.blue-cooldown}
  - --health-check-grace-period
  - ~{var.blue-grace-period}

- aws.autoscaling.update-auto-scaling-group.~{var.environment}-~{var.tier}-green-~{var.green-version}:
  - --auto-scaling-group-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-green
  - --launch-configuration-name
  - ~{var.appname}-~{var.environment}-~{var.tier}-green-~{var.green-version}
  - --min-size
  - ~{var.green-scale-min}
  - --max-size
  - ~{var.green-scale-max}
  - --desired-capacity
  - ~{var.green-scale-desired}
  - --default-cooldown
  - ~{var.green-cooldown}
  - --health-check-grace-period
  - ~{var.green-grace-period}

